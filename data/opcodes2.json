[{
	"opcode": "00",
	"mnemonic": "nop",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "No operation is performed.",
	"decimal": 0,
	"parsed": ["nop"]
}, {
	"opcode": "01",
	"mnemonic": "ld bc,**",
	"flags": "------",
	"numbytes": 3,
	"cycles": "10",
	"description": "Loads ** into bc.",
	"decimal": 1,
	"parsed": ["ld", "bc", "**"]
}, {
	"opcode": "02",
	"mnemonic": "ld (bc),a",
	"flags": "------",
	"numbytes": 1,
	"cycles": "7",
	"description": "Stores a into the memory location pointed to by bc.",
	"decimal": 2,
	"parsed": ["ld", "(bc)", "a"]
}, {
	"opcode": "03",
	"mnemonic": "inc bc",
	"flags": "------",
	"numbytes": 1,
	"cycles": "6",
	"description": "Adds one to bc.",
	"decimal": 3,
	"parsed": ["inc", "bc"]
}, {
	"opcode": "04",
	"mnemonic": "inc b",
	"flags": "-+V+++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Adds one to b.",
	"decimal": 4,
	"parsed": ["inc", "b"]
}, {
	"opcode": "05",
	"mnemonic": "dec b",
	"flags": "-+V+++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Subtracts one from b.",
	"decimal": 5,
	"parsed": ["dec", "b"]
}, {
	"opcode": "06",
	"mnemonic": "ld b,*",
	"flags": "------",
	"numbytes": 2,
	"cycles": "7",
	"description": "Loads * into b.",
	"decimal": 6,
	"parsed": ["ld", "b", "*"]
}, {
	"opcode": "07",
	"mnemonic": "rlca",
	"flags": "+0-0--",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of a are rotated left one bit position. The contents of bit 7 are copied to the carry flag and bit 0.",
	"decimal": 7,
	"parsed": ["rlca"]
}, {
	"opcode": "08",
	"mnemonic": "ex af,af'",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "Exchanges the 16-bit contents of af and af'.",
	"decimal": 8,
	"parsed": ["ex", "af", "af'"]
}, {
	"opcode": "09",
	"mnemonic": "add hl,bc",
	"flags": "++-+--",
	"numbytes": 1,
	"cycles": "11",
	"description": "The value of bc is added to hl.",
	"decimal": 9,
	"parsed": ["add", "hl", "bc"]
}, {
	"opcode": "0A",
	"mnemonic": "ld a,(bc)",
	"flags": "------",
	"numbytes": 1,
	"cycles": "7",
	"description": "Loads the value pointed to by bc into a.",
	"decimal": 10,
	"parsed": ["ld", "a", "(bc)"]
}, {
	"opcode": "0B",
	"mnemonic": "dec bc",
	"flags": "------",
	"numbytes": 1,
	"cycles": "6",
	"description": "Subtracts one from bc.",
	"decimal": 11,
	"parsed": ["dec", "bc"]
}, {
	"opcode": "0C",
	"mnemonic": "inc c",
	"flags": "-+V+++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Adds one to c.",
	"decimal": 12,
	"parsed": ["inc", "c"]
}, {
	"opcode": "0D",
	"mnemonic": "dec c",
	"flags": "-+V+++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Subtracts one from c.",
	"decimal": 13,
	"parsed": ["dec", "c"]
}, {
	"opcode": "0E",
	"mnemonic": "ld c,*",
	"flags": "------",
	"numbytes": 2,
	"cycles": "7",
	"description": "Loads * into c.",
	"decimal": 14,
	"parsed": ["ld", "c", "*"]
}, {
	"opcode": "0F",
	"mnemonic": "rrca",
	"flags": "+0-0--",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of a are rotated right one bit position. The contents of bit 0 are copied to the carry flag and bit 7.",
	"decimal": 15,
	"parsed": ["rrca"]
}, {
	"opcode": "10",
	"mnemonic": "djnz *",
	"flags": "------",
	"numbytes": 2,
	"cycles": "13/8",
	"description": "The b register is decremented, and if not zero, the signed value * is added to pc. The jump is measured from the start of the instruction opcode.",
	"decimal": 16,
	"parsed": ["djnz", "*"]
}, {
	"opcode": "11",
	"mnemonic": "ld de,**",
	"flags": "------",
	"numbytes": 3,
	"cycles": "10",
	"description": "Loads ** into de.",
	"decimal": 17,
	"parsed": ["ld", "de", "**"]
}, {
	"opcode": "12",
	"mnemonic": "ld (de),a",
	"flags": "------",
	"numbytes": 1,
	"cycles": "7",
	"description": "Stores a into the memory location pointed to by de.",
	"decimal": 18,
	"parsed": ["ld", "(de)", "a"]
}, {
	"opcode": "13",
	"mnemonic": "inc de",
	"flags": "------",
	"numbytes": 1,
	"cycles": "6",
	"description": "Adds one to de.",
	"decimal": 19,
	"parsed": ["inc", "de"]
}, {
	"opcode": "14",
	"mnemonic": "inc d",
	"flags": "-+V+++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Adds one to d.",
	"decimal": 20,
	"parsed": ["inc", "d"]
}, {
	"opcode": "15",
	"mnemonic": "dec d",
	"flags": "-+V+++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Subtracts one from d.",
	"decimal": 21,
	"parsed": ["dec", "d"]
}, {
	"opcode": "16",
	"mnemonic": "ld d,*",
	"flags": "------",
	"numbytes": 2,
	"cycles": "7",
	"description": "Loads * into d.",
	"decimal": 22,
	"parsed": ["ld", "d", "*"]
}, {
	"opcode": "17",
	"mnemonic": "rla",
	"flags": "+0-0--",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of a are rotated left one bit position. The contents of bit 7 are copied to the carry flag and the previous contents of the carry flag are copied to bit 0.",
	"decimal": 23,
	"parsed": ["rla"]
}, {
	"opcode": "18",
	"mnemonic": "jr *",
	"flags": "------",
	"numbytes": 2,
	"cycles": "12",
	"description": "The signed value * is added to pc. The jump is measured from the start of the instruction opcode.",
	"decimal": 24,
	"parsed": ["jr", "*"]
}, {
	"opcode": "19",
	"mnemonic": "add hl,de",
	"flags": "++-+--",
	"numbytes": 1,
	"cycles": "11",
	"description": "The value of de is added to hl.",
	"decimal": 25,
	"parsed": ["add", "hl", "de"]
}, {
	"opcode": "1A",
	"mnemonic": "ld a,(de)",
	"flags": "------",
	"numbytes": 1,
	"cycles": "7",
	"description": "Loads the value pointed to by de into a.",
	"decimal": 26,
	"parsed": ["ld", "a", "(de)"]
}, {
	"opcode": "1B",
	"mnemonic": "dec de",
	"flags": "------",
	"numbytes": 1,
	"cycles": "6",
	"description": "Subtracts one from de.",
	"decimal": 27,
	"parsed": ["dec", "de"]
}, {
	"opcode": "1C",
	"mnemonic": "inc e",
	"flags": "-+V+++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Adds one to e.",
	"decimal": 28,
	"parsed": ["inc", "e"]
}, {
	"opcode": "1D",
	"mnemonic": "dec e",
	"flags": "-+V+++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Subtracts one from e.",
	"decimal": 29,
	"parsed": ["dec", "e"]
}, {
	"opcode": "1E",
	"mnemonic": "ld e,*",
	"flags": "------",
	"numbytes": 2,
	"cycles": "7",
	"description": "Loads * into e.",
	"decimal": 30,
	"parsed": ["ld", "e", "*"]
}, {
	"opcode": "1F",
	"mnemonic": "rra",
	"flags": "+0-0--",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of a are rotated right one bit position. The contents of bit 0 are copied to the carry flag and the previous contents of the carry flag are copied to bit 7.",
	"decimal": 31,
	"parsed": ["rra"]
}, {
	"opcode": "20",
	"mnemonic": "jr nz,*",
	"flags": "------",
	"numbytes": 2,
	"cycles": "12/7",
	"description": "If condition cc is true, the signed value * is added to pc. The jump is measured from the start of the instruction opcode.",
	"decimal": 32,
	"parsed": ["jr", "nz", "*"]
}, {
	"opcode": "21",
	"mnemonic": "ld hl,**",
	"flags": "------",
	"numbytes": 3,
	"cycles": "10",
	"description": "Loads ** into hl.",
	"decimal": 33,
	"parsed": ["ld", "hl", "**"]
}, {
	"opcode": "22",
	"mnemonic": "ld (**),hl",
	"flags": "------",
	"numbytes": 3,
	"cycles": "16",
	"description": "Stores hl into the memory location pointed to by **.",
	"decimal": 34,
	"parsed": ["ld", "(**)", "hl"]
}, {
	"opcode": "23",
	"mnemonic": "inc hl",
	"flags": "------",
	"numbytes": 1,
	"cycles": "6",
	"description": "Adds one to hl.",
	"decimal": 35,
	"parsed": ["inc", "hl"]
}, {
	"opcode": "24",
	"mnemonic": "inc h",
	"flags": "-+V+++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Adds one to h.",
	"decimal": 36,
	"parsed": ["inc", "h"]
}, {
	"opcode": "25",
	"mnemonic": "dec h",
	"flags": "-+V+++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Subtracts one from h.",
	"decimal": 37,
	"parsed": ["dec", "h"]
}, {
	"opcode": "26",
	"mnemonic": "ld h,*",
	"flags": "------",
	"numbytes": 2,
	"cycles": "7",
	"description": "Loads * into h.",
	"decimal": 38,
	"parsed": ["ld", "h", "*"]
}, {
	"opcode": "27",
	"mnemonic": "daa",
	"flags": "*-P*++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Adjusts a for BCD addition and subtraction operations.",
	"decimal": 39,
	"parsed": ["daa"]
}, {
	"opcode": "28",
	"mnemonic": "jr z,*",
	"flags": "------",
	"numbytes": 2,
	"cycles": "12/7",
	"description": "If condition cc is true, the signed value * is added to pc. The jump is measured from the start of the instruction opcode.",
	"decimal": 40,
	"parsed": ["jr", "z", "*"]
}, {
	"opcode": "29",
	"mnemonic": "add hl,hl",
	"flags": "++-+--",
	"numbytes": 1,
	"cycles": "11",
	"description": "The value of hl is added to hl.",
	"decimal": 41,
	"parsed": ["add", "hl", "hl"]
}, {
	"opcode": "2A",
	"mnemonic": "ld hl,(**)",
	"flags": "------",
	"numbytes": 3,
	"cycles": "16",
	"description": "Loads the value pointed to by ** into hl.",
	"decimal": 42,
	"parsed": ["ld", "hl", "(**)"]
}, {
	"opcode": "2B",
	"mnemonic": "dec hl",
	"flags": "------",
	"numbytes": 1,
	"cycles": "6",
	"description": "Subtracts one from hl.",
	"decimal": 43,
	"parsed": ["dec", "hl"]
}, {
	"opcode": "2C",
	"mnemonic": "inc l",
	"flags": "-+V+++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Adds one to l.",
	"decimal": 44,
	"parsed": ["inc", "l"]
}, {
	"opcode": "2D",
	"mnemonic": "dec l",
	"flags": "-+V+++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Subtracts one from l.",
	"decimal": 45,
	"parsed": ["dec", "l"]
}, {
	"opcode": "2E",
	"mnemonic": "ld l,*",
	"flags": "------",
	"numbytes": 2,
	"cycles": "7",
	"description": "Loads * into l.",
	"decimal": 46,
	"parsed": ["ld", "l", "*"]
}, {
	"opcode": "2F",
	"mnemonic": "cpl",
	"flags": "-1-1--",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of a are inverted (one's complement).",
	"decimal": 47,
	"parsed": ["cpl"]
}, {
	"opcode": "30",
	"mnemonic": "jr nc,*",
	"flags": "------",
	"numbytes": 2,
	"cycles": "12/7",
	"description": "If condition cc is true, the signed value * is added to pc. The jump is measured from the start of the instruction opcode.",
	"decimal": 48,
	"parsed": ["jr", "nc", "*"]
}, {
	"opcode": "31",
	"mnemonic": "ld sp,**",
	"flags": "------",
	"numbytes": 3,
	"cycles": "10",
	"description": "Loads ** into sp.",
	"decimal": 49,
	"parsed": ["ld", "sp", "**"]
}, {
	"opcode": "32",
	"mnemonic": "ld (**),a",
	"flags": "------",
	"numbytes": 3,
	"cycles": "13",
	"description": "Stores a into the memory location pointed to by **.",
	"decimal": 50,
	"parsed": ["ld", "(**)", "a"]
}, {
	"opcode": "33",
	"mnemonic": "inc sp",
	"flags": "------",
	"numbytes": 1,
	"cycles": "6",
	"description": "Adds one to sp.",
	"decimal": 51,
	"parsed": ["inc", "sp"]
}, {
	"opcode": "34",
	"mnemonic": "inc (hl)",
	"flags": "-+V+++",
	"numbytes": 1,
	"cycles": "11",
	"description": "Adds one to (hl).",
	"decimal": 52,
	"parsed": ["inc", "(hl)"]
}, {
	"opcode": "35",
	"mnemonic": "dec (hl)",
	"flags": "-+V+++",
	"numbytes": 1,
	"cycles": "11",
	"description": "Subtracts one from (hl).",
	"decimal": 53,
	"parsed": ["dec", "(hl)"]
}, {
	"opcode": "36",
	"mnemonic": "ld (hl),*",
	"flags": "------",
	"numbytes": 2,
	"cycles": "10",
	"description": "Loads * into (hl).",
	"decimal": 54,
	"parsed": ["ld", "(hl)", "*"]
}, {
	"opcode": "37",
	"mnemonic": "scf",
	"flags": "10-0--",
	"numbytes": 1,
	"cycles": "4",
	"description": "Sets the carry flag.",
	"decimal": 55,
	"parsed": ["scf"]
}, {
	"opcode": "38",
	"mnemonic": "jr c,*",
	"flags": "------",
	"numbytes": 2,
	"cycles": "12/7",
	"description": "If condition cc is true, the signed value * is added to pc. The jump is measured from the start of the instruction opcode.",
	"decimal": 56,
	"parsed": ["jr", "c", "*"]
}, {
	"opcode": "39",
	"mnemonic": "add hl,sp",
	"flags": "++-+--",
	"numbytes": 1,
	"cycles": "11",
	"description": "The value of hl is added to hl.",
	"decimal": 57,
	"parsed": ["add", "hl", "sp"]
}, {
	"opcode": "3A",
	"mnemonic": "ld a,(**)",
	"flags": "------",
	"numbytes": 3,
	"cycles": "13",
	"description": "Loads the value pointed to by ** into a.",
	"decimal": 58,
	"parsed": ["ld", "a", "(**)"]
}, {
	"opcode": "3B",
	"mnemonic": "dec sp",
	"flags": "------",
	"numbytes": 1,
	"cycles": "6",
	"description": "Subtracts one from sp.",
	"decimal": 59,
	"parsed": ["dec", "sp"]
}, {
	"opcode": "3C",
	"mnemonic": "inc a",
	"flags": "-+V+++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Adds one to a.",
	"decimal": 60,
	"parsed": ["inc", "a"]
}, {
	"opcode": "3D",
	"mnemonic": "dec a",
	"flags": "-+V+++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Subtracts one from a.",
	"decimal": 61,
	"parsed": ["dec", "a"]
}, {
	"opcode": "3E",
	"mnemonic": "ld a,*",
	"flags": "------",
	"numbytes": 2,
	"cycles": "7",
	"description": "Loads * into a.",
	"decimal": 62,
	"parsed": ["ld", "a", "*"]
}, {
	"opcode": "3F",
	"mnemonic": "ccf",
	"flags": "*0-*--",
	"numbytes": 1,
	"cycles": "4",
	"description": "Inverts the carry flag.",
	"decimal": 63,
	"parsed": ["ccf"]
}, {
	"opcode": "40",
	"mnemonic": "ld b,b",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of b are loaded into b.",
	"decimal": 64,
	"parsed": ["ld", "b", "b"]
}, {
	"opcode": "41",
	"mnemonic": "ld b,c",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of c are loaded into b.",
	"decimal": 65,
	"parsed": ["ld", "b", "c"]
}, {
	"opcode": "42",
	"mnemonic": "ld b,d",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of d are loaded into b.",
	"decimal": 66,
	"parsed": ["ld", "b", "d"]
}, {
	"opcode": "43",
	"mnemonic": "ld b,e",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of e are loaded into b.",
	"decimal": 67,
	"parsed": ["ld", "b", "e"]
}, {
	"opcode": "44",
	"mnemonic": "ld b,h",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of h are loaded into b.",
	"decimal": 68,
	"parsed": ["ld", "b", "h"]
}, {
	"opcode": "45",
	"mnemonic": "ld b,l",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of l are loaded into b.",
	"decimal": 69,
	"parsed": ["ld", "b", "l"]
}, {
	"opcode": "46",
	"mnemonic": "ld b,(hl)",
	"flags": "------",
	"numbytes": 1,
	"cycles": "7",
	"description": "The contents of (hl) are loaded into b.",
	"decimal": 70,
	"parsed": ["ld", "b", "(hl)"]
}, {
	"opcode": "47",
	"mnemonic": "ld b,a",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of a are loaded into b.",
	"decimal": 71,
	"parsed": ["ld", "b", "a"]
}, {
	"opcode": "48",
	"mnemonic": "ld c,b",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of b are loaded into c.",
	"decimal": 72,
	"parsed": ["ld", "c", "b"]
}, {
	"opcode": "49",
	"mnemonic": "ld c,c",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of c are loaded into c.",
	"decimal": 73,
	"parsed": ["ld", "c", "c"]
}, {
	"opcode": "4A",
	"mnemonic": "ld c,d",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of d are loaded into c.",
	"decimal": 74,
	"parsed": ["ld", "c", "d"]
}, {
	"opcode": "4B",
	"mnemonic": "ld c,e",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of e are loaded into c.",
	"decimal": 75,
	"parsed": ["ld", "c", "e"]
}, {
	"opcode": "4C",
	"mnemonic": "ld c,h",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of h are loaded into c.",
	"decimal": 76,
	"parsed": ["ld", "c", "h"]
}, {
	"opcode": "4D",
	"mnemonic": "ld c,l",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of l are loaded into c.",
	"decimal": 77,
	"parsed": ["ld", "c", "l"]
}, {
	"opcode": "4E",
	"mnemonic": "ld c,(hl)",
	"flags": "------",
	"numbytes": 1,
	"cycles": "7",
	"description": "The contents of (hl) are loaded into c.",
	"decimal": 78,
	"parsed": ["ld", "c", "(hl)"]
}, {
	"opcode": "4F",
	"mnemonic": "ld c,a",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of a are loaded into c.",
	"decimal": 79,
	"parsed": ["ld", "c", "a"]
}, {
	"opcode": "50",
	"mnemonic": "ld d,b",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of b are loaded into d.",
	"decimal": 80,
	"parsed": ["ld", "d", "b"]
}, {
	"opcode": "51",
	"mnemonic": "ld d,c",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of c are loaded into d.",
	"decimal": 81,
	"parsed": ["ld", "d", "c"]
}, {
	"opcode": "52",
	"mnemonic": "ld d,d",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of d are loaded into d.",
	"decimal": 82,
	"parsed": ["ld", "d", "d"]
}, {
	"opcode": "53",
	"mnemonic": "ld d,e",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of e are loaded into d.",
	"decimal": 83,
	"parsed": ["ld", "d", "e"]
}, {
	"opcode": "54",
	"mnemonic": "ld d,h",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of h are loaded into d.",
	"decimal": 84,
	"parsed": ["ld", "d", "h"]
}, {
	"opcode": "55",
	"mnemonic": "ld d,l",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of l are loaded into d.",
	"decimal": 85,
	"parsed": ["ld", "d", "l"]
}, {
	"opcode": "56",
	"mnemonic": "ld d,(hl)",
	"flags": "------",
	"numbytes": 1,
	"cycles": "7",
	"description": "The contents of (hl) are loaded into d.",
	"decimal": 86,
	"parsed": ["ld", "d", "(hl)"]
}, {
	"opcode": "57",
	"mnemonic": "ld d,a",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of a are loaded into d.",
	"decimal": 87,
	"parsed": ["ld", "d", "a"]
}, {
	"opcode": "58",
	"mnemonic": "ld e,b",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of b are loaded into e.",
	"decimal": 88,
	"parsed": ["ld", "e", "b"]
}, {
	"opcode": "59",
	"mnemonic": "ld e,c",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of c are loaded into e.",
	"decimal": 89,
	"parsed": ["ld", "e", "c"]
}, {
	"opcode": "5A",
	"mnemonic": "ld e,d",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of d are loaded into e.",
	"decimal": 90,
	"parsed": ["ld", "e", "d"]
}, {
	"opcode": "5B",
	"mnemonic": "ld e,e",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of e are loaded into e.",
	"decimal": 91,
	"parsed": ["ld", "e", "e"]
}, {
	"opcode": "5C",
	"mnemonic": "ld e,h",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of h are loaded into e.",
	"decimal": 92,
	"parsed": ["ld", "e", "h"]
}, {
	"opcode": "5D",
	"mnemonic": "ld e,l",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of l are loaded into e.",
	"decimal": 93,
	"parsed": ["ld", "e", "l"]
}, {
	"opcode": "5E",
	"mnemonic": "ld e,(hl)",
	"flags": "------",
	"numbytes": 1,
	"cycles": "7",
	"description": "The contents of (hl) are loaded into e.",
	"decimal": 94,
	"parsed": ["ld", "e", "(hl)"]
}, {
	"opcode": "5F",
	"mnemonic": "ld e,a",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of a are loaded into e.",
	"decimal": 95,
	"parsed": ["ld", "e", "a"]
}, {
	"opcode": "60",
	"mnemonic": "ld h,b",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of b are loaded into h.",
	"decimal": 96,
	"parsed": ["ld", "h", "b"]
}, {
	"opcode": "61",
	"mnemonic": "ld h,c",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of c are loaded into h.",
	"decimal": 97,
	"parsed": ["ld", "h", "c"]
}, {
	"opcode": "62",
	"mnemonic": "ld h,d",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of d are loaded into h.",
	"decimal": 98,
	"parsed": ["ld", "h", "d"]
}, {
	"opcode": "63",
	"mnemonic": "ld h,e",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of e are loaded into h.",
	"decimal": 99,
	"parsed": ["ld", "h", "e"]
}, {
	"opcode": "64",
	"mnemonic": "ld h,h",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of h are loaded into h.",
	"decimal": 100,
	"parsed": ["ld", "h", "h"]
}, {
	"opcode": "65",
	"mnemonic": "ld h,l",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of l are loaded into h.",
	"decimal": 101,
	"parsed": ["ld", "h", "l"]
}, {
	"opcode": "66",
	"mnemonic": "ld h,(hl)",
	"flags": "------",
	"numbytes": 1,
	"cycles": "7",
	"description": "The contents of (hl) are loaded into h.",
	"decimal": 102,
	"parsed": ["ld", "h", "(hl)"]
}, {
	"opcode": "67",
	"mnemonic": "ld h,a",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of a are loaded into h.",
	"decimal": 103,
	"parsed": ["ld", "h", "a"]
}, {
	"opcode": "68",
	"mnemonic": "ld l,b",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of b are loaded into l.",
	"decimal": 104,
	"parsed": ["ld", "l", "b"]
}, {
	"opcode": "69",
	"mnemonic": "ld l,c",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of c are loaded into l.",
	"decimal": 105,
	"parsed": ["ld", "l", "c"]
}, {
	"opcode": "6A",
	"mnemonic": "ld l,d",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of d are loaded into l.",
	"decimal": 106,
	"parsed": ["ld", "l", "d"]
}, {
	"opcode": "6B",
	"mnemonic": "ld l,e",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of e are loaded into l.",
	"decimal": 107,
	"parsed": ["ld", "l", "e"]
}, {
	"opcode": "6C",
	"mnemonic": "ld l,h",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of h are loaded into l.",
	"decimal": 108,
	"parsed": ["ld", "l", "h"]
}, {
	"opcode": "6D",
	"mnemonic": "ld l,l",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of l are loaded into l.",
	"decimal": 109,
	"parsed": ["ld", "l", "l"]
}, {
	"opcode": "6E",
	"mnemonic": "ld l,(hl)",
	"flags": "------",
	"numbytes": 1,
	"cycles": "7",
	"description": "The contents of (hl) are loaded into l.",
	"decimal": 110,
	"parsed": ["ld", "l", "(hl)"]
}, {
	"opcode": "6F",
	"mnemonic": "ld l,a",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of a are loaded into l.",
	"decimal": 111,
	"parsed": ["ld", "l", "a"]
}, {
	"opcode": "70",
	"mnemonic": "ld (hl),b",
	"flags": "------",
	"numbytes": 1,
	"cycles": "7",
	"description": "The contents of b are loaded into (hl).",
	"decimal": 112,
	"parsed": ["ld", "(hl)", "b"]
}, {
	"opcode": "71",
	"mnemonic": "ld (hl),c",
	"flags": "------",
	"numbytes": 1,
	"cycles": "7",
	"description": "The contents of c are loaded into (hl).",
	"decimal": 113,
	"parsed": ["ld", "(hl)", "c"]
}, {
	"opcode": "72",
	"mnemonic": "ld (hl),d",
	"flags": "------",
	"numbytes": 1,
	"cycles": "7",
	"description": "The contents of d are loaded into (hl).",
	"decimal": 114,
	"parsed": ["ld", "(hl)", "d"]
}, {
	"opcode": "73",
	"mnemonic": "ld (hl),e",
	"flags": "------",
	"numbytes": 1,
	"cycles": "7",
	"description": "The contents of e are loaded into (hl).",
	"decimal": 115,
	"parsed": ["ld", "(hl)", "e"]
}, {
	"opcode": "74",
	"mnemonic": "ld (hl),h",
	"flags": "------",
	"numbytes": 1,
	"cycles": "7",
	"description": "The contents of h are loaded into (hl).",
	"decimal": 116,
	"parsed": ["ld", "(hl)", "h"]
}, {
	"opcode": "75",
	"mnemonic": "ld (hl),l",
	"flags": "------",
	"numbytes": 1,
	"cycles": "7",
	"description": "The contents of l are loaded into (hl).",
	"decimal": 117,
	"parsed": ["ld", "(hl)", "l"]
}, {
	"opcode": "76",
	"mnemonic": "halt",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "Suspends CPU operation until an interrupt or reset occurs.",
	"decimal": 118,
	"parsed": ["halt"]
}, {
	"opcode": "77",
	"mnemonic": "ld (hl),a",
	"flags": "------",
	"numbytes": 1,
	"cycles": "7",
	"description": "The contents of a are loaded into (hl).",
	"decimal": 119,
	"parsed": ["ld", "(hl)", "a"]
}, {
	"opcode": "78",
	"mnemonic": "ld a,b",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of b are loaded into a.",
	"decimal": 120,
	"parsed": ["ld", "a", "b"]
}, {
	"opcode": "79",
	"mnemonic": "ld a,c",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of c are loaded into a.",
	"decimal": 121,
	"parsed": ["ld", "a", "c"]
}, {
	"opcode": "7A",
	"mnemonic": "ld a,d",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of d are loaded into a.",
	"decimal": 122,
	"parsed": ["ld", "a", "d"]
}, {
	"opcode": "7B",
	"mnemonic": "ld a,e",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of e are loaded into a.",
	"decimal": 123,
	"parsed": ["ld", "a", "e"]
}, {
	"opcode": "7C",
	"mnemonic": "ld a,h",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of h are loaded into a.",
	"decimal": 124,
	"parsed": ["ld", "a", "h"]
}, {
	"opcode": "7D",
	"mnemonic": "ld a,l",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of l are loaded into a.",
	"decimal": 125,
	"parsed": ["ld", "a", "l"]
}, {
	"opcode": "7E",
	"mnemonic": "ld a,(hl)",
	"flags": "------",
	"numbytes": 1,
	"cycles": "7",
	"description": "The contents of (hl) are loaded into a.",
	"decimal": 126,
	"parsed": ["ld", "a", "(hl)"]
}, {
	"opcode": "7F",
	"mnemonic": "ld a,a",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "The contents of a are loaded into a.",
	"decimal": 127,
	"parsed": ["ld", "a", "a"]
}, {
	"opcode": "80",
	"mnemonic": "add a,b",
	"flags": "++V+++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Adds b to a.",
	"decimal": 128,
	"parsed": ["add", "a", "b"]
}, {
	"opcode": "81",
	"mnemonic": "add a,c",
	"flags": "++V+++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Adds c to a.",
	"decimal": 129,
	"parsed": ["add", "a", "c"]
}, {
	"opcode": "82",
	"mnemonic": "add a,d",
	"flags": "++V+++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Adds d to a.",
	"decimal": 130,
	"parsed": ["add", "a", "d"]
}, {
	"opcode": "83",
	"mnemonic": "add a,e",
	"flags": "++V+++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Adds e to a.",
	"decimal": 131,
	"parsed": ["add", "a", "e"]
}, {
	"opcode": "84",
	"mnemonic": "add a,h",
	"flags": "++V+++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Adds h to a.",
	"decimal": 132,
	"parsed": ["add", "a", "h"]
}, {
	"opcode": "85",
	"mnemonic": "add a,l",
	"flags": "++V+++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Adds l to a.",
	"decimal": 133,
	"parsed": ["add", "a", "l"]
}, {
	"opcode": "86",
	"mnemonic": "add a,(hl)",
	"flags": "++V+++",
	"numbytes": 1,
	"cycles": "7",
	"description": "Adds (hl) to a.",
	"decimal": 134,
	"parsed": ["add", "a", "(hl)"]
}, {
	"opcode": "87",
	"mnemonic": "add a,a",
	"flags": "++V+++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Adds a to a.",
	"decimal": 135,
	"parsed": ["add", "a", "a"]
}, {
	"opcode": "88",
	"mnemonic": "adc a,b",
	"flags": "++V+++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Adds b and the carry flag to a.",
	"decimal": 136,
	"parsed": ["adc", "a", "b"]
}, {
	"opcode": "89",
	"mnemonic": "adc a,c",
	"flags": "++V+++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Adds c and the carry flag to a.",
	"decimal": 137,
	"parsed": ["adc", "a", "c"]
}, {
	"opcode": "8A",
	"mnemonic": "adc a,d",
	"flags": "++V+++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Adds d and the carry flag to a.",
	"decimal": 138,
	"parsed": ["adc", "a", "d"]
}, {
	"opcode": "8B",
	"mnemonic": "adc a,e",
	"flags": "++V+++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Adds e and the carry flag to a.",
	"decimal": 139,
	"parsed": ["adc", "a", "e"]
}, {
	"opcode": "8C",
	"mnemonic": "adc a,h",
	"flags": "++V+++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Adds h and the carry flag to a.",
	"decimal": 140,
	"parsed": ["adc", "a", "h"]
}, {
	"opcode": "8D",
	"mnemonic": "adc a,l",
	"flags": "++V+++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Adds l and the carry flag to a.",
	"decimal": 141,
	"parsed": ["adc", "a", "l"]
}, {
	"opcode": "8E",
	"mnemonic": "adc a,(hl)",
	"flags": "++V+++",
	"numbytes": 1,
	"cycles": "7",
	"description": "Adds (hl) and the carry flag to a.",
	"decimal": 142,
	"parsed": ["adc", "a", "(hl)"]
}, {
	"opcode": "8F",
	"mnemonic": "adc a,a",
	"flags": "++V+++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Adds a and the carry flag to a.",
	"decimal": 143,
	"parsed": ["adc", "a", "a"]
}, {
	"opcode": "90",
	"mnemonic": "sub b",
	"flags": "++V+++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Subtracts b from a.",
	"decimal": 144,
	"parsed": ["sub", "b"]
}, {
	"opcode": "91",
	"mnemonic": "sub c",
	"flags": "++V+++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Subtracts c from a.",
	"decimal": 145,
	"parsed": ["sub", "c"]
}, {
	"opcode": "92",
	"mnemonic": "sub d",
	"flags": "++V+++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Subtracts d from a.",
	"decimal": 146,
	"parsed": ["sub", "d"]
}, {
	"opcode": "93",
	"mnemonic": "sub e",
	"flags": "++V+++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Subtracts e from a.",
	"decimal": 147,
	"parsed": ["sub", "e"]
}, {
	"opcode": "94",
	"mnemonic": "sub h",
	"flags": "++V+++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Subtracts h from a.",
	"decimal": 148,
	"parsed": ["sub", "h"]
}, {
	"opcode": "95",
	"mnemonic": "sub l",
	"flags": "++V+++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Subtracts l from a.",
	"decimal": 149,
	"parsed": ["sub", "l"]
}, {
	"opcode": "96",
	"mnemonic": "sub (hl)",
	"flags": "++V+++",
	"numbytes": 1,
	"cycles": "7",
	"description": "Subtracts (hl) from a.",
	"decimal": 150,
	"parsed": ["sub", "(hl)"]
}, {
	"opcode": "97",
	"mnemonic": "sub a",
	"flags": "++V+++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Subtracts a from a.",
	"decimal": 151,
	"parsed": ["sub", "a"]
}, {
	"opcode": "98",
	"mnemonic": "sbc a,b",
	"flags": "++V+++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Subtracts b and the carry flag from a.",
	"decimal": 152,
	"parsed": ["sbc", "a", "b"]
}, {
	"opcode": "99",
	"mnemonic": "sbc a,c",
	"flags": "++V+++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Subtracts c and the carry flag from a.",
	"decimal": 153,
	"parsed": ["sbc", "a", "c"]
}, {
	"opcode": "9A",
	"mnemonic": "sbc a,d",
	"flags": "++V+++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Subtracts d and the carry flag from a.",
	"decimal": 154,
	"parsed": ["sbc", "a", "d"]
}, {
	"opcode": "9B",
	"mnemonic": "sbc a,e",
	"flags": "++V+++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Subtracts e and the carry flag from a.",
	"decimal": 155,
	"parsed": ["sbc", "a", "e"]
}, {
	"opcode": "9C",
	"mnemonic": "sbc a,h",
	"flags": "++V+++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Subtracts h and the carry flag from a.",
	"decimal": 156,
	"parsed": ["sbc", "a", "h"]
}, {
	"opcode": "9D",
	"mnemonic": "sbc a,l",
	"flags": "++V+++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Subtracts l and the carry flag from a.",
	"decimal": 157,
	"parsed": ["sbc", "a", "l"]
}, {
	"opcode": "9E",
	"mnemonic": "sbc a,(hl)",
	"flags": "++V+++",
	"numbytes": 1,
	"cycles": "7",
	"description": "Subtracts (hl) and the carry flag from a.",
	"decimal": 158,
	"parsed": ["sbc", "a", "(hl)"]
}, {
	"opcode": "9F",
	"mnemonic": "sbc a,a",
	"flags": "++V+++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Subtracts a and the carry flag from a.",
	"decimal": 159,
	"parsed": ["sbc", "a", "a"]
}, {
	"opcode": "A0",
	"mnemonic": "and b",
	"flags": "00P1++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Bitwise AND on a with b.",
	"decimal": 160,
	"parsed": ["and", "b"]
}, {
	"opcode": "A1",
	"mnemonic": "and c",
	"flags": "00P1++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Bitwise AND on a with c.",
	"decimal": 161,
	"parsed": ["and", "c"]
}, {
	"opcode": "A2",
	"mnemonic": "and d",
	"flags": "00P1++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Bitwise AND on a with d.",
	"decimal": 162,
	"parsed": ["and", "d"]
}, {
	"opcode": "A3",
	"mnemonic": "and e",
	"flags": "00P1++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Bitwise AND on a with e.",
	"decimal": 163,
	"parsed": ["and", "e"]
}, {
	"opcode": "A4",
	"mnemonic": "and h",
	"flags": "00P1++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Bitwise AND on a with h.",
	"decimal": 164,
	"parsed": ["and", "h"]
}, {
	"opcode": "A5",
	"mnemonic": "and l",
	"flags": "00P1++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Bitwise AND on a with l.",
	"decimal": 165,
	"parsed": ["and", "l"]
}, {
	"opcode": "A6",
	"mnemonic": "and (hl)",
	"flags": "00P1++",
	"numbytes": 1,
	"cycles": "7",
	"description": "Bitwise AND on a with (hl).",
	"decimal": 166,
	"parsed": ["and", "(hl)"]
}, {
	"opcode": "A7",
	"mnemonic": "and a",
	"flags": "00P1++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Bitwise AND on a with a.",
	"decimal": 167,
	"parsed": ["and", "a"]
}, {
	"opcode": "A8",
	"mnemonic": "xor b",
	"flags": "00P0++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Bitwise XOR on a with b.",
	"decimal": 168,
	"parsed": ["xor", "b"]
}, {
	"opcode": "A9",
	"mnemonic": "xor c",
	"flags": "00P0++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Bitwise XOR on a with c.",
	"decimal": 169,
	"parsed": ["xor", "c"]
}, {
	"opcode": "AA",
	"mnemonic": "xor d",
	"flags": "00P0++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Bitwise XOR on a with d.",
	"decimal": 170,
	"parsed": ["xor", "d"]
}, {
	"opcode": "AB",
	"mnemonic": "xor e",
	"flags": "00P0++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Bitwise XOR on a with e.",
	"decimal": 171,
	"parsed": ["xor", "e"]
}, {
	"opcode": "AC",
	"mnemonic": "xor h",
	"flags": "00P0++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Bitwise XOR on a with h.",
	"decimal": 172,
	"parsed": ["xor", "h"]
}, {
	"opcode": "AD",
	"mnemonic": "xor l",
	"flags": "00P0++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Bitwise XOR on a with l.",
	"decimal": 173,
	"parsed": ["xor", "l"]
}, {
	"opcode": "AE",
	"mnemonic": "xor (hl)",
	"flags": "00P0++",
	"numbytes": 1,
	"cycles": "7",
	"description": "Bitwise XOR on a with (hl).",
	"decimal": 174,
	"parsed": ["xor", "(hl)"]
}, {
	"opcode": "AF",
	"mnemonic": "xor a",
	"flags": "00P0++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Bitwise XOR on a with a.",
	"decimal": 175,
	"parsed": ["xor", "a"]
}, {
	"opcode": "B0",
	"mnemonic": "or b",
	"flags": "00P0++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Bitwise OR on a with b.",
	"decimal": 176,
	"parsed": ["or", "b"]
}, {
	"opcode": "B1",
	"mnemonic": "or c",
	"flags": "00P0++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Bitwise OR on a with c.",
	"decimal": 177,
	"parsed": ["or", "c"]
}, {
	"opcode": "B2",
	"mnemonic": "or d",
	"flags": "00P0++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Bitwise OR on a with d.",
	"decimal": 178,
	"parsed": ["or", "d"]
}, {
	"opcode": "B3",
	"mnemonic": "or e",
	"flags": "00P0++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Bitwise OR on a with e.",
	"decimal": 179,
	"parsed": ["or", "e"]
}, {
	"opcode": "B4",
	"mnemonic": "or h",
	"flags": "00P0++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Bitwise OR on a with h.",
	"decimal": 180,
	"parsed": ["or", "h"]
}, {
	"opcode": "B5",
	"mnemonic": "or l",
	"flags": "00P0++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Bitwise OR on a with l.",
	"decimal": 181,
	"parsed": ["or", "l"]
}, {
	"opcode": "B6",
	"mnemonic": "or (hl)",
	"flags": "00P0++",
	"numbytes": 1,
	"cycles": "7",
	"description": "Bitwise OR on a with (hl).",
	"decimal": 182,
	"parsed": ["or", "(hl)"]
}, {
	"opcode": "B7",
	"mnemonic": "or a",
	"flags": "00P0++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Bitwise OR on a with a.",
	"decimal": 183,
	"parsed": ["or", "a"]
}, {
	"opcode": "B8",
	"mnemonic": "cp b",
	"flags": "++V+++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Subtracts b from a and affects flags according to the result. a is not modified.",
	"decimal": 184,
	"parsed": ["cp", "b"]
}, {
	"opcode": "B9",
	"mnemonic": "cp c",
	"flags": "++V+++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Subtracts c from a and affects flags according to the result. a is not modified.",
	"decimal": 185,
	"parsed": ["cp", "c"]
}, {
	"opcode": "BA",
	"mnemonic": "cp d",
	"flags": "++V+++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Subtracts d from a and affects flags according to the result. a is not modified.",
	"decimal": 186,
	"parsed": ["cp", "d"]
}, {
	"opcode": "BB",
	"mnemonic": "cp e",
	"flags": "++V+++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Subtracts e from a and affects flags according to the result. a is not modified.",
	"decimal": 187,
	"parsed": ["cp", "e"]
}, {
	"opcode": "BC",
	"mnemonic": "cp h",
	"flags": "++V+++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Subtracts h from a and affects flags according to the result. a is not modified.",
	"decimal": 188,
	"parsed": ["cp", "h"]
}, {
	"opcode": "BD",
	"mnemonic": "cp l",
	"flags": "++V+++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Subtracts l from a and affects flags according to the result. a is not modified.",
	"decimal": 189,
	"parsed": ["cp", "l"]
}, {
	"opcode": "BE",
	"mnemonic": "cp (hl)",
	"flags": "++V+++",
	"numbytes": 1,
	"cycles": "7",
	"description": "Subtracts (hl) from a and affects flags according to the result. a is not modified.",
	"decimal": 190,
	"parsed": ["cp", "(hl)"]
}, {
	"opcode": "BF",
	"mnemonic": "cp a",
	"flags": "++V+++",
	"numbytes": 1,
	"cycles": "4",
	"description": "Subtracts a from a and affects flags according to the result. a is not modified.",
	"decimal": 191,
	"parsed": ["cp", "a"]
}, {
	"opcode": "C0",
	"mnemonic": "ret nz",
	"flags": "------",
	"numbytes": 1,
	"cycles": "11/5",
	"description": "If condition cc is true, the top stack entry is popped into pc.",
	"decimal": 192,
	"parsed": ["ret", "nz"]
}, {
	"opcode": "C1",
	"mnemonic": "pop bc",
	"flags": "------",
	"numbytes": 1,
	"cycles": "10",
	"description": "The memory location pointed to by sp is stored into c and sp is incremented. The memory location pointed to by sp is stored into b and sp is incremented again.",
	"decimal": 193,
	"parsed": ["pop", "bc"]
}, {
	"opcode": "C2",
	"mnemonic": "jp nz,**",
	"flags": "------",
	"numbytes": 3,
	"cycles": "10",
	"description": "If condition cc is true, ** is copied to pc.",
	"decimal": 194,
	"parsed": ["jp", "nz", "**"]
}, {
	"opcode": "C3",
	"mnemonic": "jp **",
	"flags": "------",
	"numbytes": 3,
	"cycles": "10",
	"description": "** is copied to pc.",
	"decimal": 195,
	"parsed": ["jp", "**"]
}, {
	"opcode": "C4",
	"mnemonic": "call nz,**",
	"flags": "------",
	"numbytes": 3,
	"cycles": "17/10",
	"description": "If condition cc is true, the current pc value plus three is pushed onto the stack, then is loaded with **.",
	"decimal": 196,
	"parsed": ["call", "nz", "**"]
}, {
	"opcode": "C5",
	"mnemonic": "push bc",
	"flags": "------",
	"numbytes": 1,
	"cycles": "11",
	"description": "sp is decremented and b is stored into the memory location pointed to by sp. sp is decremented again and c is stored into the memory location pointed to by sp.",
	"decimal": 197,
	"parsed": ["push", "bc"]
}, {
	"opcode": "C6",
	"mnemonic": "add a,*",
	"flags": "++V+++",
	"numbytes": 2,
	"cycles": "7",
	"description": "Adds * to a.",
	"decimal": 198,
	"parsed": ["add", "a", "*"]
}, {
	"opcode": "C7",
	"mnemonic": "rst 00h",
	"flags": "------",
	"numbytes": 1,
	"cycles": "11",
	"description": "The current pc value plus one is pushed onto the stack, then is loaded with 00h.",
	"decimal": 199,
	"parsed": ["rst", "00h"]
}, {
	"opcode": "C8",
	"mnemonic": "ret z",
	"flags": "------",
	"numbytes": 1,
	"cycles": "11/5",
	"description": "If condition cc is true, the top stack entry is popped into pc.",
	"decimal": 200,
	"parsed": ["ret", "z"]
}, {
	"opcode": "C9",
	"mnemonic": "ret",
	"flags": "------",
	"numbytes": 1,
	"cycles": "10",
	"description": "The top stack entry is popped into pc.",
	"decimal": 201,
	"parsed": ["ret"]
}, {
	"opcode": "CA",
	"mnemonic": "jp z,**",
	"flags": "------",
	"numbytes": 3,
	"cycles": "10",
	"description": "If condition cc is true, ** is copied to pc.",
	"decimal": 202,
	"parsed": ["jp", "z", "**"]
}, {
	"opcode": "CC",
	"mnemonic": "call z,**",
	"flags": "------",
	"numbytes": 3,
	"cycles": "17/10",
	"description": "If condition cc is true, the current pc value plus three is pushed onto the stack, then is loaded with **.",
	"decimal": 204,
	"parsed": ["call", "z", "**"]
}, {
	"opcode": "CD",
	"mnemonic": "call **",
	"flags": "------",
	"numbytes": 3,
	"cycles": "17",
	"description": "The current pc value plus three is pushed onto the stack, then is loaded with **.",
	"decimal": 205,
	"parsed": ["call", "**"]
}, {
	"opcode": "CE",
	"mnemonic": "adc a,*",
	"flags": "++V+++",
	"numbytes": 2,
	"cycles": "7",
	"description": "Adds * and the carry flag to a.",
	"decimal": 206,
	"parsed": ["adc", "a", "*"]
}, {
	"opcode": "CF",
	"mnemonic": "rst 08h",
	"flags": "------",
	"numbytes": 1,
	"cycles": "11",
	"description": "The current pc value plus one is pushed onto the stack, then is loaded with 08h.",
	"decimal": 207,
	"parsed": ["rst", "08h"]
}, {
	"opcode": "D0",
	"mnemonic": "ret nc",
	"flags": "------",
	"numbytes": 1,
	"cycles": "11/5",
	"description": "If condition cc is true, the top stack entry is popped into pc.",
	"decimal": 208,
	"parsed": ["ret", "nc"]
}, {
	"opcode": "D1",
	"mnemonic": "pop de",
	"flags": "------",
	"numbytes": 1,
	"cycles": "10",
	"description": "The memory location pointed to by sp is stored into e and sp is incremented. The memory location pointed to by sp is stored into d and sp is incremented again.",
	"decimal": 209,
	"parsed": ["pop", "de"]
}, {
	"opcode": "D2",
	"mnemonic": "jp nc,**",
	"flags": "------",
	"numbytes": 3,
	"cycles": "10",
	"description": "If condition cc is true, ** is copied to pc.",
	"decimal": 210,
	"parsed": ["jp", "nc", "**"]
}, {
	"opcode": "D3",
	"mnemonic": "out (*),a",
	"flags": "------",
	"numbytes": 2,
	"cycles": "11",
	"description": "The value of a is written to port *.",
	"decimal": 211,
	"parsed": ["out", "(*)", "a"]
}, {
	"opcode": "D4",
	"mnemonic": "call nc,**",
	"flags": "------",
	"numbytes": 3,
	"cycles": "17/10",
	"description": "If condition cc is true, the current pc value plus three is pushed onto the stack, then is loaded with **.",
	"decimal": 212,
	"parsed": ["call", "nc", "**"]
}, {
	"opcode": "D5",
	"mnemonic": "push de",
	"flags": "------",
	"numbytes": 1,
	"cycles": "11",
	"description": "sp is decremented and d is stored into the memory location pointed to by sp. sp is decremented again and e is stored into the memory location pointed to by sp.",
	"decimal": 213,
	"parsed": ["push", "de"]
}, {
	"opcode": "D6",
	"mnemonic": "sub *",
	"flags": "++V+++",
	"numbytes": 2,
	"cycles": "7",
	"description": "Subtracts * from a.",
	"decimal": 214,
	"parsed": ["sub", "*"]
}, {
	"opcode": "D7",
	"mnemonic": "rst 10h",
	"flags": "------",
	"numbytes": 1,
	"cycles": "11",
	"description": "The current pc value plus one is pushed onto the stack, then is loaded with 10h.",
	"decimal": 215,
	"parsed": ["rst", "10h"]
}, {
	"opcode": "D8",
	"mnemonic": "ret c",
	"flags": "------",
	"numbytes": 1,
	"cycles": "11/5",
	"description": "If condition cc is true, the top stack entry is popped into pc.",
	"decimal": 216,
	"parsed": ["ret", "c"]
}, {
	"opcode": "D9",
	"mnemonic": "exx",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "Exchanges the 16-bit contents of bc, de, and hl with bc', de', and hl'.",
	"decimal": 217,
	"parsed": ["exx"]
}, {
	"opcode": "DA",
	"mnemonic": "jp c,**",
	"flags": "------",
	"numbytes": 3,
	"cycles": "10",
	"description": "If condition cc is true, ** is copied to pc.",
	"decimal": 218,
	"parsed": ["jp", "c", "**"]
}, {
	"opcode": "DB",
	"mnemonic": "in a,(*)",
	"flags": "------",
	"numbytes": 2,
	"cycles": "11",
	"description": "A byte from port * is written to a.",
	"decimal": 219,
	"parsed": ["in", "a", "(*)"]
}, {
	"opcode": "DC",
	"mnemonic": "call c,**",
	"flags": "------",
	"numbytes": 3,
	"cycles": "17/10",
	"description": "If condition cc is true, the current pc value plus three is pushed onto the stack, then is loaded with **.",
	"decimal": 220,
	"parsed": ["call", "c", "**"]
}, {
	"opcode": "DE",
	"mnemonic": "sbc a,*",
	"flags": "++V+++",
	"numbytes": 2,
	"cycles": "7",
	"description": "Subtracts * and the carry flag from a.",
	"decimal": 222,
	"parsed": ["sbc", "a", "*"]
}, {
	"opcode": "DF",
	"mnemonic": "rst 18h",
	"flags": "------",
	"numbytes": 1,
	"cycles": "11",
	"description": "The current pc value plus one is pushed onto the stack, then is loaded with 18h.",
	"decimal": 223,
	"parsed": ["rst", "18h"]
}, {
	"opcode": "E0",
	"mnemonic": "ret po",
	"flags": "------",
	"numbytes": 1,
	"cycles": "11/5",
	"description": "If condition cc is true, the top stack entry is popped into pc.",
	"decimal": 224,
	"parsed": ["ret", "po"]
}, {
	"opcode": "E1",
	"mnemonic": "pop hl",
	"flags": "------",
	"numbytes": 1,
	"cycles": "10",
	"description": "The memory location pointed to by sp is stored into l and sp is incremented. The memory location pointed to by sp is stored into h and sp is incremented again.",
	"decimal": 225,
	"parsed": ["pop", "hl"]
}, {
	"opcode": "E2",
	"mnemonic": "jp po,**",
	"flags": "------",
	"numbytes": 3,
	"cycles": "10",
	"description": "If condition cc is true, ** is copied to pc.",
	"decimal": 226,
	"parsed": ["jp", "po", "**"]
}, {
	"opcode": "E3",
	"mnemonic": "ex (sp),hl",
	"flags": "------",
	"numbytes": 1,
	"cycles": "19",
	"description": "Exchanges (sp) with l, and (sp+1) with h.",
	"decimal": 227,
	"parsed": ["ex", "(sp)", "hl"]
}, {
	"opcode": "E4",
	"mnemonic": "call po,**",
	"flags": "------",
	"numbytes": 3,
	"cycles": "17/10",
	"description": "If condition cc is true, the current pc value plus three is pushed onto the stack, then is loaded with **.",
	"decimal": 228,
	"parsed": ["call", "po", "**"]
}, {
	"opcode": "E5",
	"mnemonic": "push hl",
	"flags": "------",
	"numbytes": 1,
	"cycles": "11",
	"description": "sp is decremented and h is stored into the memory location pointed to by sp. sp is decremented again and l is stored into the memory location pointed to by sp.",
	"decimal": 229,
	"parsed": ["push", "hl"]
}, {
	"opcode": "E6",
	"mnemonic": "and *",
	"flags": "00P1++",
	"numbytes": 2,
	"cycles": "7",
	"description": "Bitwise AND on a with *.",
	"decimal": 230,
	"parsed": ["and", "*"]
}, {
	"opcode": "E7",
	"mnemonic": "rst 20h",
	"flags": "------",
	"numbytes": 1,
	"cycles": "11",
	"description": "The current pc value plus one is pushed onto the stack, then is loaded with 20h.",
	"decimal": 231,
	"parsed": ["rst", "20h"]
}, {
	"opcode": "E8",
	"mnemonic": "ret pe",
	"flags": "------",
	"numbytes": 1,
	"cycles": "11/5",
	"description": "If condition cc is true, the top stack entry is popped into pc.",
	"decimal": 232,
	"parsed": ["ret", "pe"]
}, {
	"opcode": "E9",
	"mnemonic": "jp (hl)",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "Loads the value of hl into pc.",
	"decimal": 233,
	"parsed": ["jp", "(hl)"]
}, {
	"opcode": "EA",
	"mnemonic": "jp pe,**",
	"flags": "------",
	"numbytes": 3,
	"cycles": "10",
	"description": "If condition cc is true, ** is copied to pc.",
	"decimal": 234,
	"parsed": ["jp", "pe", "**"]
}, {
	"opcode": "EB",
	"mnemonic": "ex de,hl",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "Exchanges the 16-bit contents of de and hl.",
	"decimal": 235,
	"parsed": ["ex", "de", "hl"]
}, {
	"opcode": "EC",
	"mnemonic": "call pe,**",
	"flags": "------",
	"numbytes": 3,
	"cycles": "17/10",
	"description": "If condition cc is true, the current pc value plus three is pushed onto the stack, then is loaded with **.",
	"decimal": 236,
	"parsed": ["call", "pe", "**"]
}, {
	"opcode": "EE",
	"mnemonic": "xor *",
	"flags": "00P0++",
	"numbytes": 2,
	"cycles": "7",
	"description": "Bitwise XOR on a with *.",
	"decimal": 238,
	"parsed": ["xor", "*"]
}, {
	"opcode": "EF",
	"mnemonic": "rst 28h",
	"flags": "------",
	"numbytes": 1,
	"cycles": "11",
	"description": "The current pc value plus one is pushed onto the stack, then is loaded with 28h.",
	"decimal": 239,
	"parsed": ["rst", "28h"]
}, {
	"opcode": "F0",
	"mnemonic": "ret p",
	"flags": "------",
	"numbytes": 1,
	"cycles": "11/5",
	"description": "If condition cc is true, the top stack entry is popped into pc.",
	"decimal": 240,
	"parsed": ["ret", "p"]
}, {
	"opcode": "F1",
	"mnemonic": "pop af",
	"flags": "------",
	"numbytes": 1,
	"cycles": "10",
	"description": "The memory location pointed to by sp is stored into f and sp is incremented. The memory location pointed to by sp is stored into a and sp is incremented again.",
	"decimal": 241,
	"parsed": ["pop", "af"]
}, {
	"opcode": "F2",
	"mnemonic": "jp p,**",
	"flags": "------",
	"numbytes": 3,
	"cycles": "10",
	"description": "If condition cc is true, ** is copied to pc.",
	"decimal": 242,
	"parsed": ["jp", "p", "**"]
}, {
	"opcode": "F3",
	"mnemonic": "di",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "Resets both interrupt flip-flops, thus prenting maskable interrupts from triggering.",
	"decimal": 243,
	"parsed": ["di"]
}, {
	"opcode": "F4",
	"mnemonic": "call p,**",
	"flags": "------",
	"numbytes": 3,
	"cycles": "17/10",
	"description": "If condition cc is true, the current pc value plus three is pushed onto the stack, then is loaded with **.",
	"decimal": 244,
	"parsed": ["call", "p", "**"]
}, {
	"opcode": "F5",
	"mnemonic": "push af",
	"flags": "------",
	"numbytes": 1,
	"cycles": "11",
	"description": "sp is decremented and a is stored into the memory location pointed to by sp. sp is decremented again and f is stored into the memory location pointed to by sp.",
	"decimal": 245,
	"parsed": ["push", "af"]
}, {
	"opcode": "F6",
	"mnemonic": "or *",
	"flags": "00P0++",
	"numbytes": 2,
	"cycles": "7",
	"description": "Bitwise OR on a with *.",
	"decimal": 246,
	"parsed": ["or", "*"]
}, {
	"opcode": "F7",
	"mnemonic": "rst 30h",
	"flags": "------",
	"numbytes": 1,
	"cycles": "11",
	"description": "The current pc value plus one is pushed onto the stack, then is loaded with 30h.",
	"decimal": 247,
	"parsed": ["rst", "30h"]
}, {
	"opcode": "F8",
	"mnemonic": "ret m",
	"flags": "------",
	"numbytes": 1,
	"cycles": "11/5",
	"description": "If condition cc is true, the top stack entry is popped into pc.",
	"decimal": 248,
	"parsed": ["ret", "m"]
}, {
	"opcode": "F9",
	"mnemonic": "ld sp,hl",
	"flags": "------",
	"numbytes": 1,
	"cycles": "6",
	"description": "Loads the value of hl into sp.",
	"decimal": 249,
	"parsed": ["ld", "sp", "hl"]
}, {
	"opcode": "FA",
	"mnemonic": "jp m,**",
	"flags": "------",
	"numbytes": 3,
	"cycles": "10",
	"description": "If condition cc is true, ** is copied to pc.",
	"decimal": 250,
	"parsed": ["jp", "m", "**"]
}, {
	"opcode": "FB",
	"mnemonic": "ei",
	"flags": "------",
	"numbytes": 1,
	"cycles": "4",
	"description": "Sets both interrupt flip-flops, thus allowing maskable interrupts to occur. An interrupt will not occur until after the immediatedly following instruction.",
	"decimal": 251,
	"parsed": ["ei"]
}, {
	"opcode": "FC",
	"mnemonic": "call m,**",
	"flags": "------",
	"numbytes": 3,
	"cycles": "17/10",
	"description": "If condition cc is true, the current pc value plus three is pushed onto the stack, then is loaded with **.",
	"decimal": 252,
	"parsed": ["call", "m", "**"]
}, {
	"opcode": "FE",
	"mnemonic": "cp *",
	"flags": "++V+++",
	"numbytes": 2,
	"cycles": "7",
	"description": "Subtracts * from a and affects flags according to the result. a is not modified.",
	"decimal": 254,
	"parsed": ["cp", "*"]
}, {
	"opcode": "FF",
	"mnemonic": "rst 38h",
	"flags": "------",
	"numbytes": 1,
	"cycles": "11",
	"description": "The current pc value plus one is pushed onto the stack, then is loaded with 38h.",
	"decimal": 255,
	"parsed": ["rst", "38h"]
}]